name: Build, Test, and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint --if-present

      - name: Build
        run: |
          npm run build
          # SPA fallback for GitHub Pages
          cp dist/index.html dist/404.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy_pages:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  supabase_deploy:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ secrets.SUPABASE_ACCESS_TOKEN && secrets.SUPABASE_PROJECT_REF }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1

      - name: Login to Supabase
        run: supabase login --token $SUPABASE_ACCESS_TOKEN
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

      - name: Link project
        run: supabase link --project-ref $SUPABASE_PROJECT_REF
        env:
          SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}

      - name: Deploy Edge Functions
        run: |
          supabase functions deploy parse-prompt
          supabase functions deploy search-leads
          supabase functions deploy get-search-results
          supabase functions deploy analyze-website
          supabase functions deploy generate-lead-insights || true
          supabase functions deploy rescore-leads || true
          supabase functions deploy search-enriched-leads

      - name: Apply SQL migrations
        if: ${{ secrets.SUPABASE_DB_URL }}
        env:
          SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
        run: |
          sudo apt-get update && sudo apt-get install -y postgresql-client
          for f in $(ls -1 supabase/migrations/*.sql | sort); do
            echo "Applying migration: $f" 
            psql "$SUPABASE_DB_URL" -f "$f" || exit 1
          done


